<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>商品レビュー</title>
        <style>
            body {
                font-family: 'Arial', sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
                color: #333;
                line-height: 1.6;
            }

            header {
                background-color: #4285f4;
                color: #fff;
                padding: 1em 0;
                text-align: center;
            }

            h1 {
                margin: 0 0 15px 0;
                font-size: 25px;
            }

            label {
                font-weight: bold;
                margin-right: 8px;
                color: #333;
            }

            #sortSelect,
            #filterSelect {
                margin-bottom: 10px;
                padding: 8px;
                margin-right: 10px;
                border-radius: 4px;
            }

            #statisticsResult {
                display: flex;
                align-items: center;
                justify-content: center;
                margin-top: 15px;
            }

            #statisticsButton {
                padding: 8px 15px;
                background-color: #4caf50;
                color: #fff;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                margin-left: 10px;
            }

            #statisticsButton:hover {
                background-color: #45a049;
            }

            #newInfoAddition {
                width: 400px;
                margin: 20px auto;
                padding: 20px;
                border: 1px solid #ccc;
                border-radius: 8px;
                text-align: center;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                background-color: #fff;
            }

            .newReview {
                text-align: left;
            }

            #reviewForm label,
            #reviewForm input,
            #reviewForm select,
            #reviewForm textarea {
                margin-bottom: 10px;
                box-sizing: border-box;
            }

            #reviewForm button {
                width: 30%;
                margin: auto;
                padding: 10px;
                background-color: #4caf50;
                color: #fff;
                border: none;
                border-radius: 4px;
                cursor: pointer;
            }

            #reviewForm button:hover {
                background-color: #45a049;
            }

            table {
                width: 100%;
                margin: 2em auto;
                border-collapse: collapse;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                background-color: #fff;
            }

            th,
            td {
                padding: 8px;
                text-align: left;
                border-bottom: 1px solid #ddd;
            }

            th {
                background-color: #4285f4;
                color: #fff;
            }

            tbody tr:hover {
                background-color: #f5f5f5;
            }

            #newInfoAddition {
                width: 400px;
                margin: 20px auto;
                padding: 20px;
                border: 1px solid #ccc;
                border-radius: 8px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                background-color: #fff;
            }

            .addition {
                text-align: center;
                margin-bottom: 15px;
                margin: 0 0 15px 0;
            }

            #newInfoAddition {
                width: 50%;
                margin: 20px auto;
                padding: 20px;
                border: 1px solid #ccc;
                border-radius: 8px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                background-color: #fff;
            }

            .form-group label {
                width: 50%;
            }

            .newReview {
                text-align: right;
                margin-bottom: 5px;
            }

            #reviewForm input,
            #reviewForm select,
            #reviewForm textarea {
                width: 100%;
                box-sizing: border-box;
            }

            #reviewForm select {
                margin-right: 0;
            }

            #reviewForm select {
                margin: 0;
                padding: 8px;
                box-sizing: border-box;
            }

            .form-group {
                display: flex;
                width: 100%;
                margin-bottom: 10px;
            }

            .form-group label {
                width: 50%;
                text-align: right;
                margin-right: 10px;
            }

            #reviewForm input,
            #reviewForm textarea {
                width: 100%;
                padding: 8px;
                box-sizing: border-box;
            }

            #reviewForm button {
                width: 30%;
                margin: auto;
                padding: 10px;
                background-color: #4caf50;
                color: #fff;
                border: none;
                border-radius: 4px;
                cursor: pointer;
            }

            .update-button {
                display: inline-block;
                padding: 8px 12px;
                background-color: #4CAF50;
                color: #fff;
                text-decoration: none;
                border-radius: 4px;
                transition: background-color 0.3s;
            }

            .update-button:hover {
                background-color: #45a049;
            }
        </style>
    </head>
    <body>
        <header>
            <h1>商品レビュー表</h1>
            <label for="sortSelect">評価順：</label>
            <select id="sortSelect" onchange="sortTable()">
                <option value="default">デフォルト</option>
                <option value="high">高い順</option>
                <option value="low">低い順</option>
            </select>
            <label for="filterSelect">評価絞り込み：</label>
            <select id="filterSelect" onchange="filterTable()">
                <option value="all">すべて</option>
                <option value="1">評価1</option>
                <option value="2">評価2</option>
                <option value="3">評価3</option>
                <option value="4">評価4</option>
                <option value="5">評価5</option>
            </select>
            <div id="statisticsResult">
                <label for="eraStatistics">各年代：</label>
                <span id="yearsOld"> - 人</span>
                <button id="statisticsButton" class="customButton">統計を取得</button>
            </div>
        </header>
        <div id="newInfoAddition">
            <h2 class="addition">新規レビュー追加</h2>
            <form id="reviewForm" action="/" method="POST" onsubmit="return addReview()">
                <div class="form-group">
                    <label for="username" class="newReview">ユーザー名:</label>
                    <input type="text" id="username" name="username">
                </div>
                <div class="form-group">
                    <label for="age" class="newReview">年齢:</label>
                    <input type="number" id="age" name="age">
                </div>
                <div class="form-group">
                    <label for="rating" class="newReview">評価:</label>
                    <select id="rating" name="rating">
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="reason" class="newReview">レビュー理由:</label>
                    <textarea id="reason" name="reason" required></textarea>
                </div>
                <div class="form-group">
                    <button type="submit">追加</button>
                </div>
            </form>
        </div>
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>ユーザー名</th>
                    <th>年齢</th>
                    <th>評価</th>
                    <th>レビュー理由</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <% personas.forEach(item=> { %> <tr>
                        <td>
                            <%= item.id %>
                        </td>
                        <td>
                            <%= item.username %>
                        </td>
                        <td>
                            <%= item.age %>
                        </td>
                        <td data-rating="<%= item.rating %>">
                            <%= item.rating %>
                        </td>
                        <td>
                            <%= item.reason %>
                        </td>
                        <td>
                            <a class="update-button" href="/delete/<%= item.id %>">削除</a>
                        </td>
                        <td>
                            <a class="update-button" href="/update/<%= item.id %>">編集</a>
                        </td>
                    </tr>
                    <% }); %>
            </tbody>
        </table>
        <script>
            function addReview() {
                let username = document.getElementById("username").value;
                let age = document.getElementById("age").value;
                let rating = document.getElementById("rating").value;
                let reason = document.getElementById("reason").value;

                // 名前のバリデーション
                let nameCheck = /^[ぁ-んァ-ン一-龯]+$/;

                if (!nameCheck.test(username)) {
                    alert("名前は漢字とひらがなのみ入力可");
                    return false; // フォーム送信を中止
                }

                // バリデーションが成功したらフォーム送信を許可
                return true;
            }

            // getAgeGroupの定義
            function getAgeGroup(age) {
                let base = 10;
                return `${Math.floor(age / base) * base}代`;
            };

            document.addEventListener("DOMContentLoaded", function () {
                // 初回ロード時のデータを保持
                let originalData = Array.from(document.querySelectorAll("tbody tr"));

                // sortSelectはソート、filterSelectは絞り込み
                document.getElementById("sortSelect").addEventListener("change", sortAndFilterTable);
                document.getElementById("filterSelect").addEventListener("change", sortAndFilterTable);

                function sortAndFilterTable() {
                    let sortOrder = document.getElementById("sortSelect").value;
                    let filterValue = document.getElementById("filterSelect").value;

                    // 元のデータからコピーを作成
                    let rows = originalData.slice();

                    // フィルタリング
                    rows = rows.filter(function (row) {
                        let rowRating = parseInt(row.querySelector("td[data-rating]").getAttribute("data-rating"), 10);
                        return filterValue === "all" || rowRating === parseInt(filterValue, 10);
                    });

                    // ソート
                    if (sortOrder !== "default") {
                        rows.sort(function (a, b) {
                            let aValue = parseInt(a.querySelector("td[data-rating]").getAttribute("data-rating"), 10);
                            let bValue = parseInt(b.querySelector("td[data-rating]").getAttribute("data-rating"), 10);
                            return sortOrder === "low" ? aValue - bValue : bValue - aValue;
                        });
                    }

                    // ソート・フィルタリングされた行を再度tbodyに追加
                    let tbody = document.querySelector("tbody");
                    tbody.innerHTML = "";
                    rows.forEach(function (row) {
                        tbody.appendChild(row);
                    });
                }
            });

            document.getElementById("statisticsResult").addEventListener("click", function () {
                // 統計情報の初期化
                let ageGroups = {};

                // 選択された情報から統計情報を計算
                let personas = JSON.parse('<%= JSON.stringify(personas) %>'.replace(/&#34;/g, '"'));

                personas.forEach(function (persona) {
                    let ageGroup = getAgeGroup(persona.age);

                    // ageGroupsの統計情報を計算
                    if (ageGroups[ageGroup]) {
                        ageGroups[ageGroup]++;
                    } else {
                        ageGroups[ageGroup] = 1;
                    }
                });
                // yearsOldTextの初期化
                let yearsOldText = "";
                for (const ageGroup in ageGroups) {
                    yearsOldText += `${ageGroup}： ${ageGroups[ageGroup]} 人 `;
                }
                // 表示
                document.getElementById("yearsOld").textContent = yearsOldText;
                this.classList.add("clicked");
            });
        </script>
    </body>
</html>
